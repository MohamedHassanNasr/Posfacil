plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    def appName = "Posfacil"
    def config = rootProject.extensions.getByName("ext")
    compileSdkVersion config["androidCompileSdkVersion"]
    buildToolsVersion config["androidBuildToolsVersion"]

    defaultConfig {
        applicationId "com.paguelofacil.posfacil"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8.toString()
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters "armeabi"
        }
    }

    variantFilter { variant ->
        if (variant.buildType.name == 'debug' || variant.buildType.name == 'release')
            setIgnore(true)
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def buildType = variant.buildType.name.toUpperCase()
            def date = new Date().format('yyyyMMdd')
            def versionName = variant.versionName
            def versionCode = variant.versionCode
            outputFileName = "${appName}-${buildType}-${date}-${versionName}-(${versionCode}).apk"
        }
    }

    signingConfigs {
        dev {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
        prod {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        dev {
            signingConfig signingConfigs.dev
            debuggable true
            manifestPlaceholders = [marca_prefix: "${appName}", build_prefix: 'DEV']
            applicationIdSuffix ".dev"

            buildConfigField "String", "BASE_URL", BASE_URL_DEV
            buildConfigField "String", "API_BASE_URL", API_BASE_URL_DEV
            buildConfigField "String", "BASE_URL_PAGUELOFACIL", BASE_URL_PAGUELOFACIL_DEV
            buildConfigField "String", "AUTHORIZATION_PAGUELOFACIL", AUTHORIZATION_PAGUELOFACIL_DEV
            buildConfigField "String", "AUTHORIZATION", AUTHORIZATION_DEV

            minifyEnabled false
        }

        prod {
            lintOptions {
                checkReleaseBuilds false
                abortOnError false
            }
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.prod
            debuggable true
            manifestPlaceholders = [marca_prefix: "${appName}", build_prefix: '']
            buildConfigField "String", "BASE_URL", BASE_URL_PROD
            buildConfigField "String", "BASE_URL_PAGUELOFACIL", BASE_URL_PAGUELOFACIL_PROD
            buildConfigField "String", "API_BASE_URL", API_BASE_URL_PROD
            buildConfigField "String", "AUTHORIZATION", AUTHORIZATION_PROD
            buildConfigField "String", "AUTHORIZATION_PAGUELOFACIL", AUTHORIZATION_PAGUELOFACIL_PROD
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    kapt {
        javacOptions {
            // These options are normally set automatically via the Hilt Gradle plugin, but we
            // set them manually to workaround a bug in the Kotlin 1.5.20
            option("-Adagger.fastInit=ENABLED")
            option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':commonlib')
    implementation project(':sdk')
    implementation project(':emv')

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "androidx.activity:activity-ktx:1.4.0"
    implementation "androidx.fragment:fragment-ktx:1.4.1"
    implementation "com.google.zxing:core:3.4.0"
    implementation 'androidx.preference:preference:1.2.0'

    //Scalable dp size units that scales with the screen size.
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    //Scalable sdp size units that scales with the screen size.
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    implementation 'androidx.databinding:databinding-runtime:7.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.2'

    //Logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //Lifecycle scope in activity, fragment etc
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.1"
    //ViewModel scope
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    //LiveData scope
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'

    //Room database
    implementation 'androidx.room:room-runtime:2.4.2'
    //Gson parser
    implementation 'com.google.code.gson:gson:2.8.8'

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.2"
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    //SnackBar that appears from the top
    implementation 'com.github.Redman1037:TSnackBar:V2.0.0'

    //Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.13.0'
    implementation 'com.google.android.gms:play-services-vision-common:19.1.3'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'

    //Hilt
    implementation "com.google.dagger:hilt-android:2.36"
    kapt "com.google.dagger:hilt-android-compiler:2.37"

    //viewPager2
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    //Inspector Http
    implementation "com.github.chuckerteam.chucker:library:3.5.2"

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:29.0.2')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-firestore'

    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.7'
    implementation "com.android.support:palette-v7:28.0.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}